//    Openbravo POS is a point of sales application designed for touch screens.
//    Copyright (C) 2007-2009 Openbravo, S.L.
//    http://www.openbravo.com/product/pos
//
//    This file is part of Openbravo POS.
//
//    Openbravo POS is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Openbravo POS is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Openbravo POS.  If not, see <http://www.gnu.org/licenses/>.

package com.openbravo.pos.config;

import com.openbravo.data.user.DirtyManager;
import java.awt.Component;
import com.openbravo.pos.forms.AppConfig;
import com.openbravo.pos.forms.AppLocal;
import com.openbravo.pos.util.AltEncrypter;
import com.openbravo.pos.util.DirectoryEvent;

/**
 *
 * @author adrianromero
 */
public class JPanelConfigPosSetting extends javax.swing.JPanel implements PanelConfig {
    
    private DirtyManager dirty = new DirtyManager();
    
    /** Creates new form JPanelConfigDatabase */
    public JPanelConfigPosSetting() {
        
           initComponents();
           jchkMomoe.addActionListener(dirty);
           jchkKitchenDisplay.addActionListener(dirty);
           jChkServedStatus.addActionListener(dirty);
           jchkIsPrintRequired.addActionListener(dirty);
           jchkIsReservation.addActionListener(dirty);
           jchkMenu.addActionListener(dirty);
              jchkDiscount.addActionListener(dirty);
            jchkPromoDiscount.addActionListener(dirty);
    
    }
    
    public boolean hasChanged() {
        return dirty.isDirty();
    }
    
    public Component getConfigComponent() {
        return this;
    }
   
    public void loadProperties(AppConfig config) {
         jchkMomoe.setSelected(Boolean.valueOf(config.getProperty("machine.momoestatus")).booleanValue());
     jchkKitchenDisplay.setSelected(Boolean.valueOf(config.getProperty("machine.kitchendisplay")).booleanValue());
     jChkServedStatus.setSelected(Boolean.valueOf(config.getProperty("machine.servedstatus")).booleanValue());
      jchkIsPrintRequired.setSelected(Boolean.valueOf(config.getProperty("machine.printrequired")).booleanValue());
       jchkIsReservation.setSelected(Boolean.valueOf(config.getProperty("machine.reservationstatus")).booleanValue());
       jchkMenu.setSelected(Boolean.valueOf(config.getProperty("machine.menustatus")).booleanValue());
        jchkDiscount.setSelected(Boolean.valueOf(config.getProperty("machine.categorydiscount")).booleanValue());
     jchkPromoDiscount.setSelected(Boolean.valueOf(config.getProperty("machine.promodiscount")).booleanValue());
       dirty.setDirty(false);
    }
   
    public void saveProperties(AppConfig config) {
         config.setProperty("machine.momoestatus", Boolean.toString(jchkMomoe.isSelected()));  
     config.setProperty("machine.kitchendisplay", Boolean.toString(jchkKitchenDisplay.isSelected()));
     config.setProperty("machine.servedstatus", Boolean.toString(jChkServedStatus.isSelected()));
      config.setProperty("machine.printrequired", Boolean.toString(jchkIsPrintRequired.isSelected()));
        config.setProperty("machine.reservationstatus", Boolean.toString(jchkIsReservation.isSelected()));
     config.setProperty("machine.menustatus", Boolean.toString(jchkMenu.isSelected()));
      config.setProperty("machine.categorydiscount", Boolean.toString(jchkDiscount.isSelected()));
     config.setProperty("machine.promodiscount", Boolean.toString(jchkPromoDiscount.isSelected()));
        dirty.setDirty(false);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jchkKitchenDisplay = new javax.swing.JCheckBox();
        jchkIsPrintRequired = new javax.swing.JCheckBox();
        jChkServedStatus = new javax.swing.JCheckBox();
        jchkMomoe = new javax.swing.JCheckBox();
        jchkIsReservation = new javax.swing.JCheckBox();
        jchkMenu = new javax.swing.JCheckBox();
        jchkDiscount = new javax.swing.JCheckBox();
        jchkPromoDiscount = new javax.swing.JCheckBox();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(AppLocal.getIntString("Label.Database"))); // NOI18N

        jchkKitchenDisplay.setText("Is Kitchen Display Required");

        jchkIsPrintRequired.setText("Is Print required on Settle Bill");
        jchkIsPrintRequired.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkIsPrintRequiredActionPerformed(evt);
            }
        });

        jChkServedStatus.setText("Is Served Status Required");

        jchkMomoe.setText("Is Momoe Integration Required");
        jchkMomoe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkMomoeActionPerformed(evt);
            }
        });

        jchkIsReservation.setText("Is Reservation Integration Required");

        jchkMenu.setText("Is Item price based on Menu ");

        jchkDiscount.setText("Is Category Based Discount");
        jchkDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkDiscountActionPerformed(evt);
            }
        });

        jchkPromoDiscount.setText("Is Discount application on Promotion");
        jchkPromoDiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkPromoDiscountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jChkServedStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                            .addComponent(jchkIsPrintRequired, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                            .addComponent(jchkIsReservation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jchkMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jchkMomoe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jchkKitchenDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jchkPromoDiscount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jchkDiscount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jchkMomoe)
                    .addComponent(jchkDiscount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jchkKitchenDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jchkPromoDiscount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jChkServedStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jchkIsPrintRequired, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jchkIsReservation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jchkMenu))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jchkMomoeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkMomoeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jchkMomoeActionPerformed

    private void jchkDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkDiscountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jchkDiscountActionPerformed

    private void jchkPromoDiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkPromoDiscountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jchkPromoDiscountActionPerformed

    private void jchkIsPrintRequiredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkIsPrintRequiredActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jchkIsPrintRequiredActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jChkServedStatus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox jchkDiscount;
    private javax.swing.JCheckBox jchkIsPrintRequired;
    private javax.swing.JCheckBox jchkIsReservation;
    private javax.swing.JCheckBox jchkKitchenDisplay;
    private javax.swing.JCheckBox jchkMenu;
    private javax.swing.JCheckBox jchkMomoe;
    private javax.swing.JCheckBox jchkPromoDiscount;
    // End of variables declaration//GEN-END:variables
    
}
