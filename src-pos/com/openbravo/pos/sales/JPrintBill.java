//    Openbravo POS is a point of sales application designed for touch screens.
//    Copyright (C) 2007-2009 Openbravo, S.L.
//    http://www.openbravo.com/product/pos
//
//    This file is part of Openbravo POS.
//
//    Openbravo POS is free software: you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    Openbravo POS is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with Openbravo POS.  If not, see <http://www.gnu.org/licenses/>.
package com.openbravo.pos.sales;

import com.openbravo.basic.BasicException;
import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.customers.DataLogicCustomers;
import com.openbravo.pos.forms.AppConfig;
import com.openbravo.pos.sales.shared.JTicketsBagShared;
import com.openbravo.pos.ticket.RetailTicketInfo;
import com.openbravo.pos.ticket.TicketInfo;
import java.awt.Dialog;
import java.awt.Frame;
import java.awt.Window;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.Properties;

public class JPrintBill extends JDialog {

    public javax.swing.JDialog dEdior = null;
    private Properties dbp = new Properties();
    private DataLogicReceipts dlReceipts = null;
    private DataLogicCustomers dlCustomers = null;
    private AppView m_app;
    public String[] strings = {""};
    public DefaultListModel model = null;
    public java.util.List<DiscountRateinfo> list = null;
    public boolean updateMode = false;
    static Component parentLocal = null;
    static RetailTicketInfo tinfoLocal = null;
    public static String userRole = null;
    private static DataLogicReceipts localDlReceipts = null;
    public JRetailPanelTicket JRetailPanelTicket;
    private boolean enablity;
    int x = 500;
    int y = 300;
    int width = 350;
    int height = 220;

    public static void showMessage(Component parent, DataLogicReceipts dlReceipts, RetailTicketInfo tinfo) {
        localDlReceipts = dlReceipts;
        parentLocal = parent;
        tinfoLocal = tinfo;
        //userRole = role;
        showMessage(parent, dlReceipts, 1);
    }

    private static void showMessage(Component parent, DataLogicReceipts dlReceipts, int x) {

        Window window = getWindow(parent);
        JPrintBill myMsg;
        if (window instanceof Frame) {
            myMsg = new JPrintBill((Frame) window, true);
        } else {
            myMsg = new JPrintBill((Dialog) window, true);
        }
        myMsg.init(dlReceipts);
    }

    private JPrintBill(Frame frame, boolean b) {
        super(frame, true);
        setBounds(x, y, width, height);

    }

    private JPrintBill(Dialog dialog, boolean b) {
        super(dialog, true);
        setBounds(x, y, width, height);

    }

    public void init(DataLogicReceipts dlReceipts) {

        initComponents();
   m_jOk.setEnabled(false);
   InputMap im = m_jCancel.getInputMap();
        im.put(KeyStroke.getKeyStroke("ENTER"), "pressed");
        im.put(KeyStroke.getKeyStroke("released ENTER"), "released");

        InputMap im1 = m_jOk.getInputMap();
        im1.put(KeyStroke.getKeyStroke("ENTER"), "pressed");
        im1.put(KeyStroke.getKeyStroke("released ENTER"), "released");


        setVisible(true);
        File file = new File(System.getProperty("user.home") + "/openbravopos.properties");
        AppConfig ap = new AppConfig(file);
        ap.load();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        m_jOk = new javax.swing.JButton();
        m_jCancel = new javax.swing.JButton();
        m_jChkActualBill = new javax.swing.JCheckBox();
        m_jChkReceipt = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        m_jChkNoBill = new javax.swing.JCheckBox();

        m_jOk.setBackground(new java.awt.Color(255, 255, 255));
        m_jOk.setMnemonic(KeyEvent.VK_ENTER);
        m_jOk.setText("Ok");
        m_jOk.setMaximumSize(new java.awt.Dimension(83, 25));
        m_jOk.setMinimumSize(new java.awt.Dimension(83, 25));
        m_jOk.setPreferredSize(new java.awt.Dimension(83, 25));
        m_jOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_jOkActionPerformed(evt);
            }
        });
        m_jOk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                m_jOkKeyPressed(evt);
            }
        });

        m_jCancel.setBackground(new java.awt.Color(255, 255, 255));
        m_jCancel.setMnemonic(KeyEvent.VK_ENTER);
        m_jCancel.setText("Cancel");
        m_jCancel.setMaximumSize(new java.awt.Dimension(83, 25));
        m_jCancel.setMinimumSize(new java.awt.Dimension(83, 25));
        m_jCancel.setPreferredSize(new java.awt.Dimension(83, 25));
        m_jCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_jCancelActionPerformed(evt);
            }
        });
        m_jCancel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                m_jCancelKeyPressed(evt);
            }
        });

        m_jChkActualBill.setText("Actual Bill");
        m_jChkActualBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_jChkActualBillActionPerformed(evt);
            }
        });

        m_jChkReceipt.setText("Receipt");
        m_jChkReceipt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_jChkReceiptActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText("  Print Bill");
        jLabel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, javax.swing.UIManager.getDefaults().getColor("Button.darkShadow")));

        m_jChkNoBill.setText("No Bill");
        m_jChkNoBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_jChkNoBillActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
            .add(layout.createSequentialGroup()
                .add(85, 85, 85)
                .add(m_jOk, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(10, 10, 10)
                .add(m_jCancel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
            .add(layout.createSequentialGroup()
                .add(52, 52, 52)
                .add(m_jChkNoBill, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 69, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(m_jChkActualBill)
                .add(18, 18, 18)
                .add(m_jChkReceipt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 77, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(74, 74, 74))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(31, 31, 31)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(m_jChkReceipt)
                    .add(m_jChkActualBill)
                    .add(m_jChkNoBill))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(m_jCancel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m_jOk, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleParent(this);
    }// </editor-fold>//GEN-END:initComponents

    private void m_jOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_jOkActionPerformed
         if(m_jChkActualBill.isSelected()){
             tinfoLocal.setPrintStatus(1);
         }else if(m_jChkReceipt.isSelected()){
             tinfoLocal.setPrintStatus(2);
         }else{
               tinfoLocal.setPrintStatus(3);
         }
     this.dispose();
}//GEN-LAST:event_m_jOkActionPerformed

    
    private void m_jCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_jCancelActionPerformed
tinfoLocal.setPrintStatus(0);
        this.dispose();
    }//GEN-LAST:event_m_jCancelActionPerformed

    private void m_jOkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_m_jOkKeyPressed
        if(m_jChkActualBill.isSelected()){
             tinfoLocal.setPrintStatus(1);
         }else if(m_jChkReceipt.isSelected()){
             tinfoLocal.setPrintStatus(2);
         }else{
               tinfoLocal.setPrintStatus(3);
         }
     this.dispose();
    }//GEN-LAST:event_m_jOkKeyPressed

    private void m_jCancelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_m_jCancelKeyPressed
        tinfoLocal.setPrintStatus(0);
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_m_jCancelKeyPressed

    private void m_jChkActualBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_jChkActualBillActionPerformed
        if(m_jChkActualBill.isSelected()){
            m_jChkReceipt.setSelected(false);
             m_jOk.setEnabled(true);
             m_jChkNoBill.setSelected(false);
        }else{
             m_jOk.setEnabled(false);
        }
            // TODO add your handling code here:
    }//GEN-LAST:event_m_jChkActualBillActionPerformed

    private void m_jChkReceiptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_jChkReceiptActionPerformed
        if(m_jChkReceipt.isSelected()){
            m_jChkActualBill.setSelected(false);
            m_jOk.setEnabled(true);
            m_jChkNoBill.setSelected(false);
        }else{
             m_jOk.setEnabled(false);
        }// TODO add your handling code here:
    }//GEN-LAST:event_m_jChkReceiptActionPerformed

    private void m_jChkNoBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_jChkNoBillActionPerformed
         if(m_jChkNoBill.isSelected()){
            m_jChkActualBill.setSelected(false);
            m_jOk.setEnabled(true);
            m_jChkReceipt.setSelected(false);
        }else{
             m_jOk.setEnabled(false);
        }//        // TODO add your handling code here:
    }//GEN-LAST:event_m_jChkNoBillActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton m_jCancel;
    private javax.swing.JCheckBox m_jChkActualBill;
    private javax.swing.JCheckBox m_jChkNoBill;
    private javax.swing.JCheckBox m_jChkReceipt;
    private javax.swing.JButton m_jOk;
    // End of variables declaration//GEN-END:variables

    private static Window getWindow(Component parent) {
        if (parent == null) {
            return new JFrame();
        } else if (parent instanceof Frame || parent instanceof Dialog) {
            return (Window) parent;
        } else {
            return getWindow(parent.getParent());
        }
    }

}