/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package com.sysfore.pos.saledump;

import com.openbravo.basic.BasicException;
import com.openbravo.data.loader.DataRead;
import com.openbravo.data.loader.DataWrite;
import com.openbravo.data.loader.SerializableRead;
import com.openbravo.data.loader.SerializableWrite;
import com.openbravo.format.Formats;
import java.util.Date;
import java.util.List;

/**
 *
 * @author preethi
 */
public class BillIdInfo  implements SerializableRead, SerializableWrite {
private String documentNo;
private String category;
private String wareHouse;
private Date stockDate;

    private List<StockDocumentLinesInfo> m_aLines;

    public StockHeaderInfo() {
    }

    public StockHeaderInfo(String productName, double units) {
      //  this.productName = productName;
       
   //     throw new UnsupportedOperationException("Not yet implemented");
    }

    /**
     * @return the id
     */
    public String getDocumentNo() {
        return documentNo;
    }
 public List<StockDocumentLinesInfo> getLines() {
        System.out.println("enrtrr---m_aLines"+this.m_aLines.size());
        return this.m_aLines;
    }

    public void setLines(List<StockDocumentLinesInfo> value) {

        m_aLines = value;

    }
    /**
     * @param id the id to set
     */
    public void setDocumentNo(String documentNo) {
        this.documentNo = documentNo;
    }
    public String getCategory() {
        return category;
    }

    public void setCategory(String category) {
        this.category = category;
    }

    public String getWareHouse() {
        return wareHouse;
    }

    public void setWareHouse(String wareHouse) {
        this.wareHouse = wareHouse;
    }

    public Date getStockDate() {
        return stockDate;
    }

    public String printDocumentNo(){
        return getDocumentNo();
    }
    public String printCategory(){
        return getCategory();
    }
     public String printWareHouse(){
        return getWareHouse();
    }
       public String printDate(){
        return Formats.TIMESTAMP.formatValue(getStockDate());
    }
    public void setStockDate(Date stockDate) {
        this.stockDate = stockDate;
    }

    public void readValues(DataRead dr) throws BasicException {
       documentNo = dr.getString(1);
       category = dr.getString(2);
       wareHouse = dr.getString(3);
       stockDate = dr.getTimestamp(4);
    }

    public void writeValues(DataWrite dp) throws BasicException {
       dp.setString(1, documentNo);
       dp.setString(2, category);
       dp.setString(3, wareHouse);
       dp.setTimestamp(4, stockDate);
    }
 
   

}
